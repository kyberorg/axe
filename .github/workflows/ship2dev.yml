name: "Ship - Dev"

on:
  push:
    branches-ignore:
      - trunk
      - 511-users

jobs:
  ship2dev:
    name: Ship::Dev
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to kio.ee
        run: cat ${{ secrets.KIO_TOKEN_FILE }} | docker login -u "${{ secrets.KIO_ROBOT }}" --password-stdin kio.ee

      - name: Resolve Dependencies
        run: mvn --batch-mode --update-snapshots dependency:tree

      - name: Compile JAR
        run: mvn --batch-mode --update-snapshots clean package -P production-mode,noTesting

      - name: Pull latest base and build images
        run: for img in kio.ee/base/go:1.19 kio.ee/base/java:17-jdk; do docker pull $img; done

      - name: Docker build and tag
        run: docker build -f Dockerfile.DEV -t kio.ee/yalsee/yalsee:dev .

      - name: Docker push
        run: docker push kio.ee/yalsee/yalsee:dev > dev.sha

      - name: Get Docker image SHA256
        id: docker_image_sha
        run: echo "imageSha=$(cat dev.sha | tail -n 1 | awk '{print $3}')" >> $GITHUB_OUTPUT

      - name: Debug image SHA256
        run: echo ${{ steps.docker_image_sha.outputs.imageSha }}

      - name: Delete pushed image to prevent mess
        run: docker rmi kio.ee/yalsee/yalsee:dev > dev.sha
        continue-on-error: true

      - name: Delete SHA file to prevent mess
        run: rm -f dev.sha
        continue-on-error: true

      - name: Waiting for image to appear at Registry
        uses: kyberorg/wait_for_harbor@v0.1.1
        with:
          hostname: kio.ee
          robot: ${{ secrets.KIO_USER }}
          token: ${{ secrets.KIO_PASS }}
          imageProject: yalsee
          imageRepo: yalsee
          imageTag: dev
          imageSha: ${{ steps.docker_image_sha.outputs.imageSha }}

      - name: Deploy
        uses: wei/curl@master
        with:
          args: -X POST ${{ secrets.DEV_DEPLOY_HOOK }}?tag=dev@${{ steps.docker_image_sha.outputs.imageSha }}

      - name: Get deployed commit SHA
        id: deployed_commit
        run: echo "sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Wait for site appears online
        uses: kyberorg/wait_for_new_version@v3
        with:
          url: https://dev.yals.ee
          responseCode: 200
          timeout: 120
          interval: 1.5
          hasActuator: true
          commitSha: ${{ steps.deployed_commit.outputs.sha }}
