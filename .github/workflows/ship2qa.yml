name: "Ship - QA"

on:
  pull_request:
    branches:
      - trunk
    types:
      - opened
      - synchronize
      - ready_for_review
    paths:
      - 'frontend/**'
      - 'src/**'
      - 'pom.xml'
      - 'Dockerfile*'

jobs:
  ship2qa:
    name: Ship::QA
    runs-on: self-hosted
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to kio.ee
        run: echo "${{ secrets.KIO_PASS }}" | docker login -u "${{ secrets.KIO_USER }}" --password-stdin kio.ee

      - name: Resolve Dependencies
        run: mvn --batch-mode --update-snapshots dependency:tree

      - name: Compile JAR
        run: mvn --batch-mode --update-snapshots clean package -P production-mode,noTesting

      - name: Docker build and tag
        run: docker build -f Dockerfile.PROD -t kio.ee/yalsee/yalsee:qa .

      - name: Docker push
        run: docker push kio.ee/yalsee/yalsee:qa

      - name: Get Docker image SHA256
        id: docker_image_sha
        run: echo "::set-output name=imageSha::$(docker images --digests | awk 'NR==2 {print $3}')"

      - name: Debug image SHA256
        run: echo ${{ steps.docker_image_sha.outputs.imageSha }}

      - name: Delete pushed image to prevent mess
        run: docker rmi kio.ee/yalsee/yalsee:qa
        continue-on-error: true

      - name: Waiting for image to appear at Registry
        run: sleep 10

      - name: Deploy
        uses: wei/curl@master
        with:
          args: -X POST ${{ secrets.QA_DEPLOY_HOOK }}?tag=qa@${{ steps.docker_image_sha.outputs.imageSha }}

      - name: Get deployed commit SHA
        id: deployed_commit
        run: echo "::set-output name=sha::$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Wait for site appears online
        uses: kyberorg/wait_for_new_version@v3
        with:
          url: https://qa.yals.ee
          responseCode: 200
          timeout: 120
          interval: 1.5
          hasActuator: true
          commitSha: ${{ steps.deployed_commit.outputs.sha }}
  test-qa:
    name: Test::QA
    needs: ship2qa
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    outputs:
      rerunFlag: ${{ steps.runTests.outcome }}

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%y%m%d-%H%M')"

      - name: Test App
        id: runTests
        continue-on-error: true
        run: mvn -Ptesting-only -Dtest.url=https://qa.yals.ee -Dgrid.hostname=http://grid.kio.ee -Dselenide.browser=chrome -Dtest.buildName=yalsee-qa-${{ steps.date.outputs.date }} -Dapp.shortUrl=https://q.yls.ee -Dtest.deleteToken=${{ secrets.QA_DELETE_TOKEN }} -Dtest.report.failed-tests-filename=target/test-fails.txt clean test
        env:
          JAVA_HOME: /srv/java17

      - name: Publish List of failing tests (if any)
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: test-fails
          path: target/test-fails.txt
          if-no-files-found: ignore

      - name: Publish Screenshots of failing tests (if any)
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: failedTests
          path: target/reports/**/*.png
          if-no-files-found: ignore

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.39
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: QA Unit Test Results
          comment_title: QA Unit Test Statistics
          hide_comments: off
          comment_mode: 'always'
          test_changes_limit: 5
          files: target/surefire-reports/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
          check_run_annotations: all tests, skipped tests

      - name: Delete Test Video (No failed tests)
        if: steps.runTests.outcome == 'success'
        uses: wei/curl@master
        continue-on-error: true
        with:
          args: -X DELETE -H "X-Token:${{ secrets.GRID_API_TOKEN }}" ${{ secrets.GRID_API_ENDPOINT }}/videos/yalsee-qa-${{ steps.date.outputs.date }}

  rerun-tests-qa:
    name: Test::ReRun::QA
    needs: test-qa
    runs-on: self-hosted
    if: needs.test-qa.outputs.rerunFlag == 'failure'

    steps:
      - name: Download file with failed tests
        uses: actions/download-artifact@v3
        with:
          name: test-fails
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%y%m%d-%H%M')"
      - name: ReRun Tests with mvn-rr
        id: reRunTests
        continue-on-error: true
        run: ./mvn-rr -file="test-fails.txt" -profiles="testing-only" -params="-Dtest.url=https://qa.yals.ee -Dgrid.hostname=http://grid.kio.ee -Dselenide.browser=chrome -Dtest.buildName=yalsee-qa-rerun-${{ steps.date.outputs.date }} -Dapp.shortUrl=https://q.yls.ee -Dtest.deleteToken=${{ secrets.QA_DELETE_TOKEN }} -Dtest.show-test-names-in-video=true"
        env:
          JAVA_HOME: /srv/java17

      - name: Publish Screenshots of still failing tests (if any)
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: stillFailedTests
          path: target/reports/**/*.png
          if-no-files-found: ignore

      - name: Publish New Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.39
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: QA Unit Test Results
          comment_title: QA Unit Test Statistics
          hide_comments: off
          test_changes_limit: 0
          files: target/surefire-reports/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
          check_run_annotations: all tests, skipped tests

      - name: Delete Test Video (No failed tests)
        if: steps.reRunTests.outcome == 'success'
        uses: wei/curl@master
        continue-on-error: true
        with:
          args: -X DELETE -H "X-Token:${{ secrets.GRID_API_TOKEN }}" ${{ secrets.GRID_API_ENDPOINT }}/videos/yalsee-qa-rerun-${{ steps.date.outputs.date }}
